package ru.yandex.bolts.function;

// this file is generated by ru.yandex.bolts.function.gen.GenerateFunctions

import ru.yandex.bolts.collection.Tuple2;

/**
 * @see fj.F2
 */
public abstract class Function2V<A, B> {

    public abstract void apply(A a, B b);

    public Function1V<B> bind1(final A a) {
        return new Function1V<B>() {
            public void apply(B b) {
                Function2V.this.apply(a, b);
            }

            public String toString() {
                return Function2V.this + "(" + a + ", _)";
            }
        };
    }

    public Function1V<A> bind2(final B b) {
        return new Function1V<A>() {
            public void apply(A a) {
                Function2V.this.apply(a, b);
            }

            public String toString() {
                return Function2V.this + "(_, " + b + ")";
            }
        };
    }


    public static <A, B> Function2<Function2V<A, B>, A, Function1V<B>> bind1F2() {
        return new Function2<Function2V<A, B>, A, Function1V<B>>() {
            public Function1V<B> apply(Function2V<A, B> f, A a) {
                return f.bind1(a);
            }

            public String toString() {
                return "bind1";
            }
        };
    }

    public Function<A, Function1V<B>> bind1F() {
        return Function2V.<A, B>bind1F2().bind1(this);
    }

    public static <A, B> Function2<Function2V<A, B>, B, Function1V<A>> bind2F2() {
        return new Function2<Function2V<A, B>, B, Function1V<A>>() {
            public Function1V<A> apply(Function2V<A, B> f, B b) {
                return f.bind2(b);
            }

            public String toString() {
                return "bind2";
            }
        };
    }

    public Function<B, Function1V<A>> bind2F() {
        return Function2V.<A, B>bind2F2().bind1(this);
    }

    public <C> Function2V<C, B> compose1(final Function<? super C, ? extends A> f) {
        return new Function2V<C, B>() {
            public void apply(C c, B b) {
                Function2V.this.apply(f.apply(c), b);
            }
        };
    }

    public <C> Function2V<A, C> compose2(final Function<? super C, ? extends B> f) {
        return new Function2V<A, C>() {
            public void apply(A a, C c) {
                Function2V.this.apply(a, f.apply(c));
            }
        };
    }

    public Function<Tuple2<A, B>, Object> asFunction() {
        return new Function<Tuple2<A, B>, Object>() {
            public Object apply(Tuple2<A, B> t) {
                Function2V.this.apply(t._1, t._2);
                return null;
            }

            public String toString() {
                return Function2V.this.toString();
            }
        };
    }

    public Function1V<Tuple2<A, B>> asFunction1V() {
        return new Function1V<Tuple2<A, B>>() {
            public void apply(Tuple2<A, B> t) {
                Function2V.this.apply(t._1, t._2);
            }

            public String toString() {
                return Function2V.this.toString();
            }
        };
    }

    public Function2<A, B, Object> asFunction2() {
        return new Function2<A, B, Object>() {
            public Object apply(A a, B b) {
                Function2V.this.apply(a, b);
                return null;
            }

            public String toString() {
                return Function2V.this.toString();
            }
        };
    }

    @SuppressWarnings("unchecked")
    public <A1, B1> Function2V<A1, B1> uncheckedCast() {
        return (Function2V<A1, B1>) this;
    }

} //~
